############################################################################
# CMakeLists.txt file for building XBOX core sub package
############################################################################

set(libname xboxcore)

XBOX_GLOB_SOURCES(sources ${CMAKE_CURRENT_SOURCE_DIR}/src/*.cxx)
XBOX_GLOB_HEADERS(headers ${CMAKE_CURRENT_SOURCE_DIR}/include/*.hxx)
#XBOX_GLOB_FILES(linkdefs ${CMAKE_CURRENT_SOURCE_DIR}/include/*LinkDef.h)
XBOX_GLOB_FILES(linkdefs ${CMAKE_CURRENT_SOURCE_DIR}/include/XboxCoreLinkDef.h)

# remove items from list if required if not wished to install
#list(REMOVE_ITEM headers ${CMAKE_CURRENT_SOURCE_DIR}/include/dummy.h)

# forward headers to the parent scope
# set(core_dict_headers ${headers} PARENT_SCOPE)

# add include directory. This is necessary for headers excluded from the 
# installation, that is copying to the binary path.
# include_directories(${CMAKE_CURRENT_SOURCE_DIR}/include)

# generate ROOT dictionary 
XBOX_GENERATE_DICTIONARY(${CMAKE_CURRENT_BINARY_DIR}/G__${libname} ${headers}
                      MODULE ${libname}
                      LINKDEF ${linkdefs}
#                      OPTIONS "-writeEmptyRootPCM"
                      DEPENDENCIES 
                      )


# generate linker library (this is done later when combining all core libraries)
set(ARG_LIBRARIES ${ARG_LIBRARIES} ${ROOT_LIBRARIES})

# generate object library
XBOX_LINKER_LIBRARY(${libname} 
                    ${sources} ${CMAKE_CURRENT_BINARY_DIR}/G__${libname}.cxx
                    COMPILEDEF XBOX_SHARED_EXPORTS
                    LIBRARIES ${ARG_LIBRARIES}
                   )


# copy all selected headers to the binary path 
XBOX_INSTALL_HEADERS()

# ctest
if(testing)
  add_subdirectory(test)
endif()









